import {ContractHelper} from './ContractHelper';

describe('ContractHelper', () => {
    const contract = {
        // This contract is from the Kho-I-Noor Contract
        // tslint:disable-next-line:max-line-length
        machineData: 'a23677e9ce2322cf1acf3c5ef2907048961919a7b3030000b943729d08000000010000003ad60000876393c9583942125f9853d4b30300005f9853d4bed0b2000000005f9853d4b3030000',
    };

    // @ts-ignore
    const helper = new ContractHelper(contract);


    describe('getVariableAsString', () => {
        it('returns correctly hex values at given positions', () => {
            const blockCount = contract.machineData.length / 16;
            const blocks = [];
            for (let i = 0; i < blockCount; ++i) {
                try {
                    const text = helper.getVariable(i);
                    blocks.push(text);
                } catch (e) {
                    // noop
                }
            }

            console.log(blocks)
        });
    });

    describe('getVariableAsDecimal', () => {
        it('returns correctly decimal values at given positions', () => {
            expect(helper.getVariableAsDecimal(2)).toBe('4070137469334');
        });
    });

    describe('getVariable', () => {
        it('returns correctly hex data at given positions', () => {
            expect(helper.getVariable(2)).toBe('000003b3a7191996');
        });
    });

    describe('getHexDataAt', () => {
        it('returns correctly hexadecimal block values at given position', () => {

            expect(helper.getHexDataAt(0, 8)).toBe('e97736a2');
            expect(helper.getHexDataAt(0, 32)).toBe('487090f25e3ccf1acf2223cee97736a2');

        });
    });
});
